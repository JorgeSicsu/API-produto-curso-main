trigger:
  branches:
    include:
      - main

variables:
  imageName: 'apiproduto'

pool:
  vmImage: 'ubuntu-latest'

steps:

# Etapa 1: Checkout do código
- task: Checkout@1

# Etapa 2: Configurar o JDK 17
- task: UseJavaVersion@1
  inputs:
    versionSpec: '17'
    jdkArchitecture: 'x64'
    jdkSourceOption: 'PreInstalled'

# Etapa 3: Build com Maven
- task: Maven@3
  inputs:
    mavenPomFile: 'pom.xml'
    goals: 'package'
    options: '-X'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '17'
    mavenVersionOption: 'Default'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'

# Etapa 4: Build da imagem Docker
- task: Docker@2
  inputs:
    containerRegistry: 'AzureAppService' # nome do Service Connection
    repository: 'apiproduto'                      # nome do repositório ACR
    command: 'buildAndPush'
    Dockerfile: '**/Dockerfile'
    tags: |
      latest

# Etapa 5: Deploy no App Service
- task: AzureWebAppContainer@1
  inputs:
    azureSubscription: 'AzureDevOpsAppConnection'     # mesmo nome da conexão
    appName: 'app-produto'                            # nome exato do App Service
    containers: 'apiproduto.azurecr.io/apiproduto:latest'
